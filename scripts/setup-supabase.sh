#!/bin/bash\n\n# Data Snack v3 - Supabase Setup Script\n# This script sets up the Supabase database with the required schema\n\nset -e # Exit on any error\n\necho \"üöÄ Data Snack v3 - Supabase Setup\"\necho \"===================================\"\n\n# Colors for output\nRED='\\033[0;31m'\nGREEN='\\033[0;32m'\nYELLOW='\\033[1;33m'\nNC='\\033[0m' # No Color\n\n# Check if required tools are installed\ncommand -v supabase >/dev/null 2>&1 || { \n    echo -e \"${RED}Error: Supabase CLI is not installed.${NC}\"\n    echo \"Install it with: npm install -g supabase\"\n    exit 1\n}\n\n# Check if we're in the right directory\nif [ ! -f \"packages/database/src/schema.sql\" ]; then\n    echo -e \"${RED}Error: schema.sql not found. Are you in the project root?${NC}\"\n    exit 1\nfi\n\n# Initialize Supabase project (if not already done)\necho -e \"${YELLOW}üìÅ Initializing Supabase project...${NC}\"\nif [ ! -f \"supabase/config.toml\" ]; then\n    supabase init\nelse\n    echo \"Supabase project already initialized.\"\nfi\n\n# Start local Supabase (optional for development)\nread -p \"Do you want to start local Supabase for development? (y/N): \" -n 1 -r\necho\nif [[ $REPLY =~ ^[Yy]$ ]]; then\n    echo -e \"${YELLOW}üê≥ Starting local Supabase...${NC}\"\n    supabase start\n    echo -e \"${GREEN}‚úÖ Local Supabase started!${NC}\"\n    echo \"Dashboard: http://localhost:54323\"\n    echo \"Database URL: postgresql://postgres:postgres@localhost:54322/postgres\"\nfi\n\n# Ask for database connection\necho\necho \"Choose database target:\"\necho \"1) Local Supabase (localhost:54322)\"\necho \"2) Remote Supabase Project\"\nread -p \"Enter choice (1 or 2): \" choice\n\ncase $choice in\n    1)\n        echo -e \"${YELLOW}üìä Setting up local database...${NC}\"\n        DB_URL=\"postgresql://postgres:postgres@localhost:54322/postgres\"\n        ;;\n    2)\n        echo -e \"${YELLOW}üìä Setting up remote database...${NC}\"\n        read -p \"Enter your Supabase project URL (without https://): \" PROJECT_URL\n        read -s -p \"Enter your database password: \" DB_PASSWORD\n        echo\n        DB_URL=\"postgresql://postgres:${DB_PASSWORD}@db.${PROJECT_URL}:5432/postgres\"\n        ;;\n    *)\n        echo -e \"${RED}Invalid choice. Exiting.${NC}\"\n        exit 1\n        ;;\nesac\n\n# Apply database schema\necho -e \"${YELLOW}üèóÔ∏è  Applying database schema...${NC}\"\npsql \"$DB_URL\" -f packages/database/src/schema.sql || {\n    echo -e \"${RED}Error: Failed to apply schema. Check your connection and try again.${NC}\"\n    exit 1\n}\n\necho -e \"${GREEN}‚úÖ Database schema applied successfully!${NC}\"\n\n# Create sample data (optional)\nread -p \"Do you want to insert sample data? (y/N): \" -n 1 -r\necho\nif [[ $REPLY =~ ^[Yy]$ ]]; then\n    echo -e \"${YELLOW}üìã Inserting sample data...${NC}\"\n    \n    # Create sample user\n    psql \"$DB_URL\" -c \"\n        INSERT INTO users (fingerprint_hash, consent_categories) VALUES \n        ('sample_user_fingerprint_hash', '{\\\"necessary\\\": true, \\\"analytics\\\": true, \\\"marketing\\\": false, \\\"personalization\\\": true}'::jsonb)\n        ON CONFLICT (fingerprint_hash) DO NOTHING;\n    \"\n    \n    # Create sample events\n    psql \"$DB_URL\" -c \"\n        INSERT INTO events (user_id, session_id, event_type, event_name, properties, context, is_anonymous) \n        SELECT \n            u.id,\n            'sample_session_' || generate_random_uuid(),\n            (ARRAY['page_view', 'click', 'scroll', 'hover'])[floor(random() * 4 + 1)],\n            'sample_event',\n            '{\\\"sample\\\": true}'::jsonb,\n            '{\\\"userAgent\\\": \\\"Sample Browser\\\", \\\"ip\\\": \\\"127.0.0.1\\\"}'::jsonb,\n            false\n        FROM users u \n        WHERE u.fingerprint_hash = 'sample_user_fingerprint_hash'\n        LIMIT 1;\n    \"\n    \n    echo -e \"${GREEN}‚úÖ Sample data inserted!${NC}\"\nfi\n\n# Display connection info\necho\necho -e \"${GREEN}üéâ Setup complete!${NC}\"\necho\necho \"Next steps:\"\necho \"1. Copy apps/web/.env.example to apps/web/.env.local\"\necho \"2. Update .env.local with your Supabase credentials\"\necho \"3. Run 'pnpm dev' to start the development server\"\necho\necho \"Database URL: $DB_URL\"\necho\necho -e \"${YELLOW}üìö Documentation:${NC}\"\necho \"- Supabase Dashboard: https://supabase.com/dashboard\"\necho \"- Local Dashboard: http://localhost:54323 (if running locally)\"\necho \"- API Docs: http://localhost:3000/api-docs (after starting dev server)\"\necho\necho -e \"${GREEN}Happy coding! üöÄ${NC}\"\n