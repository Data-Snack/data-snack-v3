# Dockerfile fÃ¼r GTM Server-Side Tracking Service\nFROM node:20-alpine AS base\n\n# Install dependencies only when needed\nFROM base AS deps\n# Check https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine\n# to understand why libc6-compat might be needed.\nRUN apk add --no-cache libc6-compat\nWORKDIR /app\n\n# Copy package files\nCOPY package.json package-lock.json* pnpm-lock.yaml* ./\n# Install dependencies\nRUN corepack enable pnpm && pnpm i --frozen-lockfile\n\n# Rebuild the source code only when needed\nFROM base AS builder\nWORKDIR /app\nCOPY --from=deps /app/node_modules ./node_modules\nCOPY . .\n\n# Build the application\nRUN npm run build\n\n# Production image, copy all the files and run\nFROM base AS runner\nWORKDIR /app\n\nENV NODE_ENV=production\n\n# Create a non-root user\nRUN addgroup --system --gid 1001 nodejs\nRUN adduser --system --uid 1001 tracking\n\n# Copy built application\nCOPY --from=builder /app/dist ./dist\nCOPY --from=builder /app/node_modules ./node_modules\nCOPY --from=builder /app/package.json ./package.json\n\n# Change ownership\nUSER tracking\n\n# Expose port\nEXPOSE 8080\n\n# Health check\nHEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \\\n  CMD node -e \"require('http').get('http://localhost:8080/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })\"\n\n# Start the application\nCMD [\"node\", \"dist/index.js\"]\n