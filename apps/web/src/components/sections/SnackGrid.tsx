'use client';\n\nexport function SnackGrid() {\n  const snacks = [\n    {\n      id: 'privacy-leak-detector',\n      title: 'üïµÔ∏è Privacy Leak Detector',\n      description: 'Entdecke, was dein Browser √ºber dich verr√§t',\n      duration: '2-3 min',\n      difficulty: 'Einsteiger',\n      category: 'Tracking Exposed',\n      xp: 250,\n      status: 'available'\n    },\n    {\n      id: 'click-dna-analyzer', \n      title: 'üñ±Ô∏è Click DNA Analyzer',\n      description: 'Deine Pers√∂nlichkeit aus Click-Patterns',\n      duration: '30 sec',\n      difficulty: 'Einsteiger', \n      category: 'Tracking Exposed',\n      xp: 200,\n      status: 'available'\n    },\n    {\n      id: 'scroll-behavior-decoder',\n      title: 'üìú Scroll Behavior Decoder', \n      description: 'Wie dein Scrollverhalten dich verr√§t',\n      duration: '5 min',\n      difficulty: 'Fortgeschritten',\n      category: 'Tracking Exposed', \n      xp: 350,\n      status: 'coming-soon'\n    },\n    {\n      id: 'keyboard-dna-sequencer',\n      title: '‚å®Ô∏è Keyboard DNA Sequencer',\n      description: 'Biometrie durch Tipprhythmus',\n      duration: '3 min', \n      difficulty: 'Fortgeschritten',\n      category: 'Tracking Exposed',\n      xp: 300,\n      status: 'coming-soon'\n    },\n    {\n      id: 'social-addiction-radar',\n      title: 'üì± Social Addiction Radar',\n      description: 'Infinite Scroll Manipulation Analysis',\n      duration: '5 min',\n      difficulty: 'Expert',\n      category: 'Psychological Profiling', \n      xp: 500,\n      status: 'coming-soon'\n    },\n    {\n      id: 'dark-pattern-detector',\n      title: 'üï≥Ô∏è Dark Pattern Detector',\n      description: 'UX Manipulation Test',\n      duration: '4 min',\n      difficulty: 'Expert',\n      category: 'Psychological Profiling',\n      xp: 400,\n      status: 'coming-soon'\n    }\n  ];\n\n  return (\n    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8\">\n      {snacks.map((snack) => (\n        <div \n          key={snack.id} \n          className=\"glass rounded-2xl p-6 hover:bg-white/10 transition-all duration-300 hover:scale-105 cursor-pointer group\"\n        >\n          <div className=\"flex items-start justify-between mb-4\">\n            <div className=\"flex items-center gap-2\">\n              <span className=\"text-sm font-medium px-2 py-1 rounded-full bg-primary/20 text-primary\">\n                {snack.category}\n              </span>\n              {snack.status === 'coming-soon' && (\n                <span className=\"text-xs px-2 py-1 rounded-full bg-yellow-500/20 text-yellow-400\">\n                  Coming Soon\n                </span>\n              )}\n            </div>\n            <div className=\"text-sm text-muted-foreground\">\n              +{snack.xp} XP\n            </div>\n          </div>\n          \n          <h3 className=\"text-xl font-bold mb-3 group-hover:text-primary transition-colors\">\n            {snack.title}\n          </h3>\n          \n          <p className=\"text-muted-foreground mb-4 leading-relaxed\">\n            {snack.description}\n          </p>\n          \n          <div className=\"flex items-center justify-between text-sm\">\n            <div className=\"flex items-center gap-4\">\n              <span className=\"text-muted-foreground\">\n                ‚è±Ô∏è {snack.duration}\n              </span>\n              <span className=\"text-muted-foreground\">\n                üìä {snack.difficulty}\n              </span>\n            </div>\n            \n            <div className=\"opacity-0 group-hover:opacity-100 transition-opacity\">\n              <span className=\"text-primary font-medium\">\n                {snack.status === 'available' ? 'Starten ‚Üí' : 'Bald ‚Üí'}\n              </span>\n            </div>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n}\n